// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using System;

namespace TaxiFares.API.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("TaxiFares.API.Domain.Aggregates.CityAggregate.City", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ChangeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATE()");

                    b.Property<string>("CityId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Fares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("I")
                        .HasColumnType("REAL");

                    b.Property<double>("II")
                        .HasColumnType("REAL");

                    b.Property<double>("III")
                        .HasColumnType("REAL");

                    b.Property<double>("IV")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("Fares");
                });

            modelBuilder.Entity("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Company", b =>
                {
                    b.HasOne("TaxiFares.API.Domain.Aggregates.CityAggregate.City", "City")
                        .WithMany("Companies")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Fares", b =>
                {
                    b.HasOne("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Company", "Company")
                        .WithOne("Fares")
                        .HasForeignKey("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Fares", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("TaxiFares.API.Domain.Aggregates.CityAggregate.City", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Company", b =>
                {
                    b.Navigation("Fares");
                });
#pragma warning restore 612, 618
        }
    }
}
