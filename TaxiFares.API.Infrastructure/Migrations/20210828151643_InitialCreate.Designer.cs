// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxiFares.API.Infrastructure;

namespace TaxiFares.API.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210828151643_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("FaresId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FaresId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Fares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("I")
                        .HasColumnType("REAL");

                    b.Property<double>("II")
                        .HasColumnType("REAL");

                    b.Property<double>("III")
                        .HasColumnType("REAL");

                    b.Property<double>("IV")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Fares");
                });

            modelBuilder.Entity("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Company", b =>
                {
                    b.HasOne("TaxiFares.API.Domain.Aggregates.CompanyAggregate.Fares", "Fares")
                        .WithMany()
                        .HasForeignKey("FaresId");

                    b.Navigation("Fares");
                });
#pragma warning restore 612, 618
        }
    }
}
